<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cyh.blog.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.cyh.blog.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="createTime" jdbcType="DATE" property="createtime" />
    <result column="lastTime" jdbcType="TIMESTAMP" property="lasttime" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
    <result column="locked" jdbcType="BIT" property="locked" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userName, password, createTime, lastTime, email, sex, salt, picture, locked
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where userName = #{userName,jdbcType=VARCHAR}
  </select>
  <select id="getRolesByUserName" parameterType="java.lang.String" resultType="java.lang.String">
    select r.roleName
    from user u , role r , user_role ur
    where ur.userId = u.id and ur.roleId = r.id and u.userName = #{userName,jdbcType=VARCHAR}
  </select>
  <select id="getPermissionsByRole" parameterType="java.lang.String" resultType="java.lang.String">
    select p.permissionName
    from role r , permission p , permission_role pr
    where pr.permissionId = p.id and pr.roleId = r.id and r.roleName = #{roleName,jdbcType=VARCHAR}
  </select>
  <select id="getUserList" resultMap="BaseResultMap">
    select *
    from user
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cyh.blog.entity.User">
    insert into user (id, userName, password, 
      createTime, lastTime, email, 
      sex, salt, picture, locked
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=DATE}, #{lasttime,jdbcType=TIMESTAMP}, #{email,jdbcType=VARCHAR}, 
      #{sex,jdbcType=CHAR}, #{salt,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR}, #{locked,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cyh.blog.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        userName,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="lasttime != null">
        lastTime,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="locked != null">
        locked,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=DATE},
      </if>
      <if test="lasttime != null">
        #{lasttime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="locked != null">
        #{locked,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cyh.blog.entity.User">
    update user
    <set>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=DATE},
      </if>
      <if test="lasttime != null">
        lastTime = #{lasttime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="locked != null">
        locked = #{locked,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cyh.blog.entity.User">
    update user
    set userName = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=DATE},
      lastTime = #{lasttime,jdbcType=TIMESTAMP},
      email = #{email,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      salt = #{salt,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR},
      locked = #{locked,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>